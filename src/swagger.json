{
  "openapi": "3.0.0",
  "info": {
    "title": "User management documentation",
    "description": "This backend exercise involves building a Node.js/Express.js app that will serve a REST API",
    "version": "1.0.0"
  },
  "paths": {
    "/admin/best-clients": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the clients the paid the most for jobs in the query time period",
        "description": "Get the clients the paid the most for jobs in the query time period",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "paid": {
                            "type": "number",
                            "example": 2020
                          },
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "fullName": {
                            "type": "string",
                            "example": "Mr Robot"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/best-profession": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the profession that earned the most money",
        "description": "Get the profession that earned the most money (sum of jobs paid) for any contactor that worked in the query time range",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "totalPaid": {
                            "type": "number",
                            "description": "Total paid in that period",
                            "example": 100
                          },
                          "profession": {
                            "type": "string",
                            "description": "Profession name",
                            "example": "Fighter"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/balances/deposit/{userId}": {
      "post": {
        "tags": [
          "Balances"
        ],
        "summary": "Deposit money into user account",
        "description": "Deposit money into user account",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "profile_id",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  }
                },
                "example": {
                  "value": 100
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error1": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Invalid amount, it should be less than 25% of your unpaid jobs: XXX.XX"
                        }
                      }
                    },
                    "error2": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "You cannot deposit into a profile that not belongs to you!"
                        }
                      }
                    },
                    "error3": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Invalid amount!"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get non terminated contracts",
        "description": "Get non terminated contracts that belongs to a user (client or contractor)",
        "parameters": [
          {
            "name": "profile_id",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "terms": {
                            "type": "string",
                            "example": "bla bla bla"
                          },
                          "status": {
                            "type": "string",
                            "example": "in_progress"
                          },
                          "ContractorId": {
                            "type": "number",
                            "example": 6
                          },
                          "ClientId": {
                            "type": "number",
                            "example": 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/contracts/{id}": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get contracts that belongs to the profile id",
        "description": "Get the contract by id if belongs to the user who is calling",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "profile_id",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "terms": {
                            "type": "string",
                            "example": "bla bla bla"
                          },
                          "status": {
                            "type": "string",
                            "example": "in_progress"
                          },
                          "ContractorId": {
                            "type": "number",
                            "example": 6
                          },
                          "ClientId": {
                            "type": "number",
                            "example": 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Contract not found",
                      "example": "Contract not found!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/unpaid": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get all unpaid jobs by user logged",
        "description": "Get all unpaid jobs for a user (either a client or contractor), for active contracts only",
        "parameters": [
          {
            "name": "profile_id",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "description": {
                            "type": "string",
                            "example": "work"
                          },
                          "price": {
                            "type": "number",
                            "example": 100
                          },
                          "paid": {
                            "type": "boolean",
                            "example": false
                          },
                          "paymentDate": {
                            "type": "string",
                            "example": null
                          },
                          "ContractId": {
                            "type": "number",
                            "example": 1
                          },
                          "Contract": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "example": 1
                              },
                              "status": {
                                "type": "string",
                                "example": "terminated"
                              },
                              "ContractorId": {
                                "type": "number",
                                "example": 5
                              },
                              "ClientId": {
                                "type": "number",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/jobs/{job_id}/pay": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Pay for a job",
        "description": "Pay for a job",
        "parameters": [
          {
            "name": "profile_id",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Check your available money!",
                      "example": "Check your available money!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/jobs/getById/{jobId}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get job by id and logged user",
        "description": "Get job by id and logged user",
        "parameters": [
          {
            "name": "profile_id",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "description": {
                          "type": "string",
                          "example": "work"
                        },
                        "price": {
                          "type": "number",
                          "example": 100
                        },
                        "paid": {
                          "type": "boolean",
                          "example": false
                        },
                        "paymentDate": {
                          "type": "string",
                          "example": null
                        },
                        "ContractId": {
                          "type": "number",
                          "example": 1
                        },
                        "Contract": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "example": 1
                            },
                            "status": {
                              "type": "string",
                              "example": "terminated"
                            },
                            "ContractorId": {
                              "type": "number",
                              "example": 5
                            },
                            "ClientId": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}